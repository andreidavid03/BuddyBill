generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  ownedTrips    Trip[]         @relation("OwnedTrips")
  trips         Trip[]         @relation("TripUsers")
  expenses      Expense[]
  notifications Notification[]
}

model Trip {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], name: "OwnedTrips")
  expenses  Expense[]
  users     User[]    @relation("TripUsers")
}

model Expense {
  id            String               @id @default(uuid())
  amount        Float
  description   String
  isPaid        Boolean              @default(false)
  createdAt     DateTime             @default(now())
  tripId        String
  trip          Trip                 @relation(fields: [tripId], references: [id])
  userId        String
  user          User                 @relation(fields: [userId], references: [id])
  paymentType   String?
  notifications Notification[]
  paidById      String
  participants  ExpenseParticipant[]
}

model ExpenseParticipant {
  id        String  @id @default(uuid())
  expenseId String
  expense   Expense @relation(fields: [expenseId], references: [id])
  amount    Float
}

model Notification {
  id        String   @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expenseId String?
  expense   Expense? @relation(fields: [expenseId], references: [id])
}
